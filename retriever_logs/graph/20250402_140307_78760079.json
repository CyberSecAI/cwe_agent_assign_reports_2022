{
  "retriever": "graph",
  "query": "# Vulnerability Description\n\n    A **remote dom xss**, **crlf injection** vulnerability was discovered in HPE Integrated Lights-Out 4 (iLO 4) HPE SimpliVity 380 Gen9 HPE Integrated Lights-Out 5 (iLO 5) for HPE Gen10 Servers HPE SimpliVity 380 Gen10 HPE SimpliVity 2600 HPE SimpliVity 380 Gen10 G HPE SimpliVity 325 HPE SimpliVity 380 Gen10 H version(s) Prior to version 2.78.\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## WEAKNESS: 'remote dom xss'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## WEAKNESS: 'crlf injection'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') (Score: 215.10)\n\nThe product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs....\n\n## PRODUCT: 'HPE Integrated Lights-Out 4'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## PRODUCT: 'HPE Integrated Lights-Out 5'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## VERSION: 'Prior to version 2.78'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') (Score: 81.52)\n\nThe product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n     Consider specifically these CWEs: CWE-113 CWE-79 CWE-80 CWE-807 CWE-74 CWE-327 CWE-1391 CWE-321",
  "keyphrases": {
    "original_query": "# Vulnerability Description\n\n    A **remote dom xss**, **crlf injection** vulnerability was discovered in HPE Integrated Lights-Out 4 (iLO 4) HPE SimpliVity 380 Gen9 HPE Integrated Lights-Out 5 (iLO 5) for HPE Gen10 Servers HPE SimpliVity 380 Gen10 HPE SimpliVity 2600 HPE SimpliVity 380 Gen10 G HPE SimpliVity 325 HPE SimpliVity 380 Gen10 H version(s) Prior to version 2.78.\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## WEAKNESS: 'remote dom xss'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## WEAKNESS: 'crlf injection'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') (Score: 215.10)\n\nThe product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs....\n\n## PRODUCT: 'HPE Integrated Lights-Out 4'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## PRODUCT: 'HPE Integrated Lights-Out 5'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## VERSION: 'Prior to version 2.78'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') (Score: 81.52)\n\nThe product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n    ",
    "enhanced_query": "# Vulnerability Description\n\n    A **remote dom xss**, **crlf injection** vulnerability was discovered in HPE Integrated Lights-Out 4 (iLO 4) HPE SimpliVity 380 Gen9 HPE Integrated Lights-Out 5 (iLO 5) for HPE Gen10 Servers HPE SimpliVity 380 Gen10 HPE SimpliVity 2600 HPE SimpliVity 380 Gen10 G HPE SimpliVity 325 HPE SimpliVity 380 Gen10 H version(s) Prior to version 2.78.\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## WEAKNESS: 'remote dom xss'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## WEAKNESS: 'crlf injection'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') (Score: 215.10)\n\nThe product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs....\n\n## PRODUCT: 'HPE Integrated Lights-Out 4'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## PRODUCT: 'HPE Integrated Lights-Out 5'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-327: Use of a Broken or Risky Cryptographic Algorithm (Score: 195.34)\n\nThe product uses a broken or risky cryptographic algorithm or protocol....\n\n## VERSION: 'Prior to version 2.78'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 797.67)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n### 2. CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') (Score: 367.52)\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component....\n\n### 3. CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag (Score: 301.22)\n\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag....\n\n### 4. CWE-321: Use of Hard-coded Cryptographic Key (Score: 220.52)\n\nThe use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered....\n\n### 5. CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') (Score: 81.52)\n\nThe product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n     Consider specifically these CWEs: CWE-113 CWE-79 CWE-80 CWE-807 CWE-74 CWE-327 CWE-1391 CWE-321",
    "cwe_mentions": [
      "CWE-113",
      "CWE-79",
      "CWE-80",
      "CWE-807",
      "CWE-74",
      "CWE-327",
      "CWE-1391",
      "CWE-321"
    ],
    "search_time": 2.508122444152832
  },
  "timestamp": "2025-04-02 14:03:07",
  "cve_id": "unknown",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "type": "base",
      "score": 4.329000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "259",
      "name": "Use of Hard-coded Password",
      "type": "variant",
      "score": 2.68272,
      "relationship_count": 0
    },
    {
      "cwe_id": "113",
      "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "type": "Variant",
      "score": 2.6130116805074928,
      "relationship_count": 0
    },
    {
      "cwe_id": "93",
      "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
      "type": "base",
      "score": 2.4699999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "78",
      "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "type": "base",
      "score": 2.4232000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "184",
      "name": "Incomplete List of Disallowed Inputs",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "494",
      "name": "Download of Code Without Integrity Check",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "117",
      "name": "Improper Output Neutralization for Logs",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "208",
      "name": "Observable Timing Discrepancy",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "434",
      "name": "Unrestricted Upload of File with Dangerous Type",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    }
  ]
}