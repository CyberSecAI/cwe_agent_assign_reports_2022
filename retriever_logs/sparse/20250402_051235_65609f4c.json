{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nIn createOrUpdate of Permission.java and related code, there is possible permission escalation due to a **logic error**. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation. Product Android Versions Android-10, Android-11, Android-8.0, Android-8.1, Android-9 Android ID A-168319670.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **logic error**\n- **impact:** permission escalation\n- **product:** Android\n- **version:** Android-10, Android-11, Android-8.0, Android-8.1, Android-9\n- **component:** createOrUpdate of Permission.java and related code\n\n## CVE Reference Links Content Summary\n```\n{\n  \"vulnerability_details\": [\n    {\n      \"cve_id\": \"CVE-2021-0317\",\n      \"root_cause\": \"The provided information indicates a permission issue, but lacks specifics. The commit log mentions 'Revoke permission on non-runtime -> runtime upgrade' which suggests a problem with how permissions are handled during an upgrade process.\",\n      \"weaknesses\": [\n        \"Improper permission handling\",\n        \"Potential for privilege escalation during runtime upgrade\"\n      ],\n      \"impact\": \"Elevation of Privilege\",\n      \"attack_vectors\": [\n        \"Exploitation during a system upgrade process.\"\n      ],\n      \"required_capabilities\": [\n        \"The attacker would need some mechanism to initiate a system upgrade.\"\n      ],\n      \"additional_notes\": \"The provided commit log contains a change-id, merge-in and cherry-pick information. The test associated is 'atest PermissionEscalationTest'. This provides context for testing the issue, however, the vulnerability details are not mentioned.\"\n    }\n  ],\n  \"Unaffected_content\": [\n    {\n      \"type\": \"android_security_bulletin\",\n      \"content\": \"The Android Security Bulletin contains details of security vulnerabilities affecting Android devices. Security patch levels of 2021-01-05 or later address all of these issues. To learn how to check a device's security patch level, see Check and update your Android version.\\n\\nAndroid partners are notified of all issues at least a month before publication. Source code patches for these issues have been released to the Android Open Source Project (AOSP) repository and linked from this bulletin. This bulletin also includes links to patches outside of AOSP.\\n\\nThe most severe of these issues is a critical security vulnerability in the System component that could enable a remote attacker using a specially crafted transmission to execute arbitrary code within the context of a privileged process. The severity assessment is based on the effect that exploiting the vulnerability would possibly have on an affected device, assuming the platform and service mitigations are turned off for development purposes or if successfully bypassed.\\n\\nRefer to the Android and Google Play Protect mitigations section for details on the Android security platform protections and Google Play Protect, which improve the security of the Android platform.\\n\\nNote: Information on the latest over-the-air update (OTA) and firmware images for Google devices is available in the January 2021 Pixel Update Bulletin.\\nAndroid and Google service mitigations\\n\\nThis is a summary of the mitigations provided by the Android security platform and service protections such as Google Play Protect. These capabilities reduce the likelihood that security vulnerabilities could be successfully exploited on Android.\\n\\nExploitation for many issues on Android is made more difficult by enhancements in newer versions of the Android platform. We encourage all users to update to the latest version of Android where possible.\\nThe Android security team actively monitors for abuse through Google Play Protect and warns users about Potentially Harmful Applications. Google Play Protect is enabled by default on devices with Google Mobile Services, and is especially important for users who install apps from outside of Google Play.\\n\\nNote: There are indications that CVE-2020-11261 may be under limited, targeted exploitation.\\n2021-01-01 security patch level vulnerability details\\n\\nIn the sections below, we provide details for each of the security vulnerabilities that apply to the 2021-01-01 patch level. Vulnerabilities are grouped under the component they affect. Issues are described in the tables below and include CVE ID, associated references, type of vulnerability, severity, and updated AOSP versions (where applicable). When available, we link the public change that addressed the issue to the bug ID, like the AOSP change list. When multiple changes relate to a single bug, additional references are linked to numbers following the bug ID. Devices with Android 10 and later may receive security updates as well as Google Play system updates.\\nFramework\\n\\nThe most severe vulnerability in this section could enable a remote attacker using a specially crafted string to cause a permanent denial of service.\\n| CVE | References | Type | Severity | Updated AOSP versions |\\n| --- | --- | --- | --- | --- |\\n| CVE-2021-0313 | A-170968514 | DoS | Critical | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0303 | A-170407229 | EoP | High | 11 |\\n| CVE-2021-0306 | A-154505240 [2] | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0307 | A-155648771 [2] | EoP | High | 10, 11 |\\n| CVE-2021-0310 | A-170212632 | EoP | High | 11 |\\n| CVE-2021-0315 | A-169763814 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0317 | A-168319670 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0318 | A-168211968 | EoP | High | 8.1, 9, 10, 11 |\\n| CVE-2021-0319 | A-167244818 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0304 | A-162738636 | ID | High | 8.0, 8.1, 9, 10 |\\n| CVE-2021-0309 | A-158480899 | ID | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0321 | A-166667403 | ID | High | 11 |\\n| CVE-2021-0322 | A-159145361 [2] | ID | High | 9, 10, 11 |\\n| CVE-2019-9376 | A-129287265 | DoS | High | 8.0, 8.1, 9 |\\n| CVE-2020-15999 | A-171232105 | RCE | Moderate | 8.0, 8.1, 9, 10, 11 |\\nMedia Framework\\n\\nThe most severe vulnerability in this section could enable a remote attacker using a specially crafted file to execute arbitrary code within the context of a privileged process.\\n| CVE | References | Type | Severity | Updated AOSP versions |\\n| --- | --- | --- | --- | --- |\\n| CVE-2016-6328 | A-162602132 | RCE | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0311 | A-170240631 | ID | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0312 | A-170583712 | ID | High | 8.0, 8.1, 9, 10, 11 |\\nSystem\\n\\nThe most severe vulnerability in this section could enable a remote attacker using a specially crafted transmission to execute arbitrary code within the context of a privileged process.\\n| CVE | References | Type | Severity | Updated AOSP versions |\\n| --- | --- | --- | --- | --- |\\n| CVE-2021-0316 | A-168802990 | RCE | Critical | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2020-0471 | A-169327567 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0308 | A-158063095 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0320 | A-169933423 | ID | High | 10, 11 |\\nGoogle Play system updates\\n\\nThe following issues are included in Project Mainline components.\\n| Component | CVE |\\n| --- | --- |\\n| Media Framework components | CVE-2021-0311, CVE-2021-0312 |\\n2021-01-05 security patch level vulnerability details\\n\\nIn the sections below, we provide details for each of the security vulnerabilities that apply to the 2021-01-05 patch level. Vulnerabilities are grouped under the component they affect. Issues are described in the tables below and include CVE ID, associated references, type of vulnerability, severity, and updated AOSP versions (where applicable). When available, we link the public change that addressed the issue to the bug ID, like the AOSP change list. When multiple changes relate to a single bug, additional references are linked to numbers following the bug ID.\\nKernel components\\n\\nThe most severe vulnerability in this section could enable a local malicious application to bypass operating system protections that isolate application data from other applications.\\n| CVE | References | Type | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2020-10732 | A-170658976 Upstream kernel | ID | High | ELF core dumps |\\n| CVE-2020-10766 | A-169505740 Upstream kernel | ID | High | Speculative execution |\\n| CVE-2020-10767 | A-156766097 Upstream kernel | ID | High | Linux kernel |\\nMediaTek components\\n\\nThis vulnerability affects MediaTek components and further details are available directly from MediaTek. The severity assessment of this issue is provided directly by MediaTek.\\n| CVE | References |  | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2021-0301 | A-172514667 M-ALPS05342361[*] |  | High | ged |\\nQualcomm components\\n\\nThese vulnerabilities affect Qualcomm components and are described in further detail in the appropriate Qualcomm security bulletin or security alert. The severity assessment of these issues is provided directly by Qualcomm.\\n| CVE | References |  | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2020-11233 | A-170138863 QC-CR#2257789 |  | High | Kernel |\\n| CVE-2020-11239 | A-168722551 QC-CR#2744826 |  | High | Display |\\n| CVE-2020-11240 | A-170138526 QC-CR#2702760 [2] [3] |  | High | Camera |\\n| CVE-2020-11250 | A-170139097 QC-CR#2734543 |  | High | Audio |\\n| CVE-2020-11261 | A-161373974 QC-CR#2742124 |  | High | Display |\\n| CVE-2020-11262 | A-170138789 QC-CR#2742711 |  | High | Display |\\nQualcomm closed-source components\\n\\nThese vulnerabilities affect Qualcomm closed-source components and are described in further detail in the appropriate Qualcomm security bulletin or security alert. The severity assessment of these issues is provided directly by Qualcomm.\\n| CVE | References |  | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2020-11134 | A-170138862[*] |  | Critical | Closed-source component |\\n| CVE-2020-11182 | A-168722721[*] |  | Critical | Closed-source component |\\n| CVE-2020-11126 | A-170139227[*] |  | High | Closed-source component |\\n| CVE-2020-11159 | A-170138666[*] |  | High | Closed-source component |\\n| CVE-2020-11181 | A-168051034[*] |  | High | Closed-source component |\\n| CVE-2020-11235 | A-170138866[*] |  | High | Closed-source component |\\n| CVE-2020-11238 | A-170139099[*] |  | High | Closed-source component |\\n| CVE-2020-11241 | A-170139229[*] |  | High | Closed-source component |\\n| CVE-2020-11260 | A-168918332[*] |  | High | Closed-source component |\\nCommon questions and answers\\n\\nThis section answers common questions that may occur after reading this bulletin.\\n\\n1. How do I determine if my device is updated to address these issues?\\n\\nTo learn how to check a device's security patch level, see Check and update your Android version.\\n\\nSecurity patch levels of 2021-01-01 or later address all issues associated with the 2021-01-01 security patch level.\\nSecurity patch levels of 2021-01-05 or later address all issues associated with the 2021-01-05 security patch level and all previous patch levels.\\nDevice manufacturers that include these updates should set the patch string level to:\\n\\n[ro.build.version.security_patch]:[2021-01-01]\\n[ro.build.version.security_patch]:[2021-01-05]\\nFor some devices on Android 10 or later, the Google Play system update will have a date string that matches the 2021-01-01 security patch level. Please see this article for more details on how to install security updates.\\n\\n2. Why does this bulletin have two security patch levels?\\n\\nThis bulletin has two security patch levels so that Android partners have the flexibility to fix a subset of vulnerabilities that are similar across all Android devices more quickly. Android partners are encouraged to fix all issues in this bulletin and use the latest security patch level.\\n\\nDevices that use the 2021-01-01 security patch level must include all issues associated with that security patch level, as well as fixes for all issues reported in previous security bulletins.\\nDevices that use the security patch level of 2021-01-05 or newer must include all applicable patches in this (and previous) security bulletins.\\nPartners are encouraged to bundle the fixes for all issues they are addressing in a single update.\\n\\n3. What do the entries in the Type column mean?\\n\\nEntries in the Type column of the vulnerability details table reference the classification of the security vulnerability.\\n\\n| Abbreviation | Definition |\\n| --- | --- |\\n| RCE | Remote code execution |\\n| EoP | Elevation of privilege |\\n| ID | Information disclosure |\\n| DoS | Denial of service |\\n| N/A | Classification not available |\\n\\n4. What do the entries in the References column mean?\\n\\nEntries under the References column of the vulnerability details table may contain a prefix identifying the organization to which the reference value belongs.\\n\\n| Prefix | Reference |\\n| --- | --- |\\n| A- | Android bug ID |\\n| QC- | Qualcomm reference number |\\n| M- | MediaTek reference number |\\n| N- | NVIDIA reference number |\\n| B- | Broadcom reference number |\\n\\n5. What does an * next to the Android bug ID in the References column mean?\\n\\nIssues that are not publicly available have an * next to the corresponding reference ID. The update for that issue is generally contained in the latest binary drivers for Pixel devices available from the Google Developer site.\\n\\n6. Why are security vulnerabilities split between this bulletin and device\u200a/\u200apartner security bulletins, such as the Pixel bulletin?\\n\\nSecurity vulnerabilities that are documented in this security bulletin are required to declare the latest security patch level on Android devices. Additional security vulnerabilities that are documented in the device\u200a/\u200apartner security bulletins are not required for declaring a security patch level. Android device and chipset manufacturers may also publish security vulnerability details specific to their products, such as Google, Huawei, LGE, Motorola, Nokia, or Samsung.\\nVersions\\n\\n| Version | Date | Notes |\\n| --- | --- | --- |\\n| 1.0 | January 4, 2021 | Bulletin released |\\n| 1.1 | January 7, 2021 | Bulletin revised to include AOSP links and revised CVE table |\\n\\nContent and code samples on this page are subject to the licenses described in the Content License. Java and OpenJDK are trademarks or registered trademarks of Oracle and/or its affiliates.\\n\\nLast updated 2024-08-26 UTC.\"\n    },\n        {\n      \"type\": \"android_source_code\",\n      \"content\": \"dHJlZSBlODRkNTdkNTJlNGFkMjc2NTA4MjczOWJjMTQyMDViZjQxNjFiYThjCnBhcmVudCAwM2RhNDYzYjJhOTRjMzZlM2I0NmYwYTExMGVjNDM3MTBiODJkNDA0CmF1dGhvciBQaGlsaXAgUC4gTW9sdG1hbm4gPG1vbHRtYW5uQGdvb2dsZS5jb20+IDE2MDQ0NDUxNjQgLTA4MDAKY29tbWl0dGVyIGFuZHJvaWQtYnVpbGQtdGVhbSBSb2JvdCA8YW5kcm9pZC1idWlsZC10ZWFtLXJvYm90QGdvb2dsZS5jb20+IDE2MDU3Mzk4NjggKzAwMDAKClJldm9rZSBwZXJtaXNzaW9uIG9uIG5vbi1ydW50aW1lIC0+IHJ1bnRpbWUgdXBncmFkZQoKTm90IG9ubHkgb24gbm9ybWFsIC0+IHJ1bnRpbWUuCgpUZXN0OiBhdGVzdCBQZXJtaXNzaW9uRXNjYWxhdGlvblRlc3QKQnVnOiAxNTQ1MDUyNDAsIDE2ODMxOTY3MApDaGFuZ2UtSWQ6IElmM2I0MjAwNjdiNGQ3MTExZGNmNjdhZTZmOThlNDIxNzYxNThiNjc5Ck1lcmdlZC1JbjogSWYzYjQyMDA2N2I0ZDcxMTFkY2Y2N2FlNmY5OGU0MjE3NjE1OGI2NzkKKGNoZXJyeSBwaWNrZWQgZnJvbSBjb21taXQgMzNlMjRjODgzYzU3OTdmZTdiYTA1NDY4YmRlOTY3ZmIwZTQ2ZTY2ZCkK\"\n    },\n    {\n     \"type\": \"android_source_code\",\n      \"content\": \"dHJlZSAyNDBiM2NlMGY3YTkzNTliNzM2ZDBkODUzM2Y0MWVlZGQwYWE2ZTYwCnBhcmVudCA5MGNmZTE3NjQzYWE0ZWNiZTdjYmZiMWM3ODcyMTc0NTZmNzY0ZTA4CmF1dGhvciBEbWl0cnkgRGVtZW50eWV2IDxkZW1lbnR5ZXZAZ29vZ2xlLmNvbT4gMTYwNDk2OTA0OCAtMDgwMApjb21taXR0ZXIgYW5kcm9pZC1idWlsZC10ZWFtIFJvYm90IDxhbmRyb2lkLWJ1aWxkLXRlYW0tcm9ib3RAZ29vZ2xlLmNvbT4gMTYwNTczOTg4OCArMDAwMAoKUHJvdGVjdCBHcmFudENyZWRlbnRpYWxzUGVybWlzc2lvbkFjdGl2aXR5IGFnYWluc3Qgb3ZlcmxheS4KCkJ1ZzogMTY5NzYzODE0ClRlc3Q6IG1hbnVhbApDaGFuZ2UtSWQ6IEkxNWRkMjI3OTFmY2M2MWVmMDJiMDZhZDUxZDllNDQwOWQxMWMwMTgxCihjaGVycnkgcGlja2VkIGZyb20gY29tbWl0IGY0NWRjZmUxZjVlZDc0ZGNlYzE1Nzk5ZjJhYmQ5ZTVlY2JiZWQ0YjcpCg==\"\n    }\n  ]\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 862 | Missing Authorization | Class | Allowed-with-Review | sparse | 0.483 |\n| 2 | 1021 | Improper Restriction of Rendered UI Layers or Frames | Base | Allowed | sparse | 0.467 |\n| 3 | 908 | Use of Uninitialized Resource | Base | Allowed | sparse | 0.431 |\n| 4 | 223 | Omission of Security-relevant Information | Base | Allowed | sparse | 0.429 |\n| 5 | 732 | Incorrect Permission Assignment for Critical Resource | Class | Allowed-with-Review | sparse | 0.426 |\n| 6 | 279 | Incorrect Execution-Assigned Permissions | Variant | Allowed | dense | 0.561 |\n| 7 | 939 | Improper Authorization in Handler for Custom URL Scheme | Base | Allowed | graph | 0.002 |\n| 8 | 248 | Uncaught Exception | Base | Allowed | sparse | 0.420 |\n| 9 | 667 | Improper Locking | Class | Allowed-with-Review | sparse | 0.419 |\n| 10 | 665 | Improper Initialization | Class | Discouraged | sparse | 0.410 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-862: Missing Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-3597:** Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.\n\n\n\n\n## CWE-1021: Improper Restriction of Rendered UI Layers or Frames\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.\n\n### Extended Description\nA web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.\n\n### Alternative Terms\nClickjacking\nUI Redress Attack\nTapjacking: \"Tapjacking\" is similar to clickjacking, except it is used for mobile applications in which the user \"taps\" the application instead of performing a mouse click.\n\n### Relationships\nChildOf -> CWE-441\nChildOf -> CWE-610\nChildOf -> CWE-451\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2017-7440:** E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message\n- **CVE-2017-5697:** Hardware/firmware product has insufficient clickjacking protection in its web user interface\n- **CVE-2017-4015:** Clickjacking in data-loss prevention product via HTTP response header.\n\n\n\n\n## CWE-908: Use of Uninitialized Resource\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product uses or accesses a resource that has not been initialized.\n\n### Extended Description\nWhen a resource has not been properly initialized, the product may behave unexpectedly. This may lead to a crash or invalid memory access, but the consequences vary depending on the type of resource and how it is used within the product.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-665\nChildOf -> CWE-665\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2019-9805:** Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption.\n- **CVE-2008-4197:** Use of uninitialized memory may allow code execution.\n- **CVE-2008-2934:** Free of an uninitialized pointer leads to crash and possible code execution.\n\n\n\n\n## CWE-223: Omission of Security-relevant Information\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-221\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1029:** Login attempts are not recorded if the user disconnects before the maximum number of tries.\n- **CVE-2002-1839:** Sender's IP address not recorded in outgoing e-mail.\n- **CVE-2000-0542:** Failed authentication attempts are not recorded if later attempt succeeds.\n\n\n\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n### Extended Description\nWhen a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n**Comments:** Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2022-29527:** Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.\n- **CVE-2009-3482:** Anti-virus product sets insecure \"Everyone: Full Control\" permissions for files under the \"Program Files\" folder, allowing attackers to replace executables with Trojan horses.\n- **CVE-2009-3897:** Product creates directories with 0777 permissions at installation, allowing users to gain privileges and access a socket used for authentication.\n\n\n\n\n## CWE-279: Incorrect Execution-Assigned Permissions\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nWhile it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-732\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2002-0265:** Log files opened read/write.\n- **CVE-2003-0876:** Log files opened read/write.\n- **CVE-2002-1694:** Log files opened read/write.\n\n\n\n\n## CWE-939: Improper Authorization in Handler for Custom URL Scheme\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.\n\n### Extended Description\nMobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's discretion which may open security flaws in the application. An example could be potentially dangerous functionality such as modifying files through a custom URL scheme.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-862\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2013-5725:** URL scheme has action replace which requires no user prompt and allows remote attackers to perform undesired actions.\n- **CVE-2013-5726:** URL scheme has action follow and favorite which allows remote attackers to force user to perform undesired actions.\n\n\n\n\n## CWE-248: Uncaught Exception\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nAn exception is thrown from a function, but it is not caught.\n\n### Extended Description\nWhen an exception is not caught, it may cause the program to crash or expose sensitive information.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-705\nChildOf -> CWE-755\nChildOf -> CWE-703\nChildOf -> CWE-703\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2023-41151:** SDK for OPC Unified Architecture (OPC UA) server has uncaught exception when a socket is blocked for writing but the server tries to send an error\n- **CVE-2023-21087:** Java code in a smartphone OS can encounter a \"boot loop\" due to an uncaught exception\n\n\n\n\n## CWE-667: Improper Locking\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n### Extended Description\n\n\nLocking is a type of synchronization behavior that ensures that multiple independently-operating processes or threads do not interfere with each other when accessing the same resource. All processes/threads are expected to follow the same steps for locking. If these steps are not followed precisely - or if no locking is done at all - then another process/thread could modify the shared resource in a way that is not visible or predictable to the original process. This can lead to data or memory corruption, denial of service, etc.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-662\nChildOf -> CWE-662\nChildOf -> CWE-662\nChildOf -> CWE-662\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, race conditions, reentrant functions, etc. CWE-662 and its children - including CWE-667, CWE-820, CWE-821, and others - may need to be modified significantly, along with their relationships.\n\n\n\n### Observed Examples\n- **CVE-2021-1782:** Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV.\n- **CVE-2009-0935:** Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice\n- **CVE-2010-4210:** function in OS kernel unlocks a mutex that was not previously locked, causing a panic or overwrite of arbitrary memory.\n\n\n\n\n## CWE-665: Improper Initialization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n### Extended Description\nThis can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2001-1471:** chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.\n- **CVE-2008-3637:** Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.\n- **CVE-2008-4197:** Use of uninitialized memory may allow code execution.\n\n",
  "keyphrases": {
    "base_query": "## Vulnerability Description\nIn createOrUpdate of Permission.java and related code, there is possible permission escalation due to a **logic error**. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation. Product Android Versions Android-10, Android-11, Android-8.0, Android-8.1, Android-9 Android ID A-168319670.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **logic error**\n- **impact:** permission escalation\n- **product:** Android\n- **version:** Android-10, Android-11, Android-8.0, Android-8.1, Android-9\n- **component:** createOrUpdate of Permission.java and related code\n\n## CVE Reference Links Content Summary\n```\n{\n  \"vulnerability_details\": [\n    {\n      \"cve_id\": \"CVE-2021-0317\",\n      \"root_cause\": \"The provided information indicates a permission issue, but lacks specifics. The commit log mentions 'Revoke permission on non-runtime -> runtime upgrade' which suggests a problem with how permissions are handled during an upgrade process.\",\n      \"weaknesses\": [\n        \"Improper permission handling\",\n        \"Potential for privilege escalation during runtime upgrade\"\n      ],\n      \"impact\": \"Elevation of Privilege\",\n      \"attack_vectors\": [\n        \"Exploitation during a system upgrade process.\"\n      ],\n      \"required_capabilities\": [\n        \"The attacker would need some mechanism to initiate a system upgrade.\"\n      ],\n      \"additional_notes\": \"The provided commit log contains a change-id, merge-in and cherry-pick information. The test associated is 'atest PermissionEscalationTest'. This provides context for testing the issue, however, the vulnerability details are not mentioned.\"\n    }\n  ],\n  \"Unaffected_content\": [\n    {\n      \"type\": \"android_security_bulletin\",\n      \"content\": \"The Android Security Bulletin contains details of security vulnerabilities affecting Android devices. Security patch levels of 2021-01-05 or later address all of these issues. To learn how to check a device's security patch level, see Check and update your Android version.\\n\\nAndroid partners are notified of all issues at least a month before publication. Source code patches for these issues have been released to the Android Open Source Project (AOSP) repository and linked from this bulletin. This bulletin also includes links to patches outside of AOSP.\\n\\nThe most severe of these issues is a critical security vulnerability in the System component that could enable a remote attacker using a specially crafted transmission to execute arbitrary code within the context of a privileged process. The severity assessment is based on the effect that exploiting the vulnerability would possibly have on an affected device, assuming the platform and service mitigations are turned off for development purposes or if successfully bypassed.\\n\\nRefer to the Android and Google Play Protect mitigations section for details on the Android security platform protections and Google Play Protect, which improve the security of the Android platform.\\n\\nNote: Information on the latest over-the-air update (OTA) and firmware images for Google devices is available in the January 2021 Pixel Update Bulletin.\\nAndroid and Google service mitigations\\n\\nThis is a summary of the mitigations provided by the Android security platform and service protections such as Google Play Protect. These capabilities reduce the likelihood that security vulnerabilities could be successfully exploited on Android.\\n\\nExploitation for many issues on Android is made more difficult by enhancements in newer versions of the Android platform. We encourage all users to update to the latest version of Android where possible.\\nThe Android security team actively monitors for abuse through Google Play Protect and warns users about Potentially Harmful Applications. Google Play Protect is enabled by default on devices with Google Mobile Services, and is especially important for users who install apps from outside of Google Play.\\n\\nNote: There are indications that CVE-2020-11261 may be under limited, targeted exploitation.\\n2021-01-01 security patch level vulnerability details\\n\\nIn the sections below, we provide details for each of the security vulnerabilities that apply to the 2021-01-01 patch level. Vulnerabilities are grouped under the component they affect. Issues are described in the tables below and include CVE ID, associated references, type of vulnerability, severity, and updated AOSP versions (where applicable). When available, we link the public change that addressed the issue to the bug ID, like the AOSP change list. When multiple changes relate to a single bug, additional references are linked to numbers following the bug ID. Devices with Android 10 and later may receive security updates as well as Google Play system updates.\\nFramework\\n\\nThe most severe vulnerability in this section could enable a remote attacker using a specially crafted string to cause a permanent denial of service.\\n| CVE | References | Type | Severity | Updated AOSP versions |\\n| --- | --- | --- | --- | --- |\\n| CVE-2021-0313 | A-170968514 | DoS | Critical | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0303 | A-170407229 | EoP | High | 11 |\\n| CVE-2021-0306 | A-154505240 [2] | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0307 | A-155648771 [2] | EoP | High | 10, 11 |\\n| CVE-2021-0310 | A-170212632 | EoP | High | 11 |\\n| CVE-2021-0315 | A-169763814 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0317 | A-168319670 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0318 | A-168211968 | EoP | High | 8.1, 9, 10, 11 |\\n| CVE-2021-0319 | A-167244818 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0304 | A-162738636 | ID | High | 8.0, 8.1, 9, 10 |\\n| CVE-2021-0309 | A-158480899 | ID | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0321 | A-166667403 | ID | High | 11 |\\n| CVE-2021-0322 | A-159145361 [2] | ID | High | 9, 10, 11 |\\n| CVE-2019-9376 | A-129287265 | DoS | High | 8.0, 8.1, 9 |\\n| CVE-2020-15999 | A-171232105 | RCE | Moderate | 8.0, 8.1, 9, 10, 11 |\\nMedia Framework\\n\\nThe most severe vulnerability in this section could enable a remote attacker using a specially crafted file to execute arbitrary code within the context of a privileged process.\\n| CVE | References | Type | Severity | Updated AOSP versions |\\n| --- | --- | --- | --- | --- |\\n| CVE-2016-6328 | A-162602132 | RCE | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0311 | A-170240631 | ID | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0312 | A-170583712 | ID | High | 8.0, 8.1, 9, 10, 11 |\\nSystem\\n\\nThe most severe vulnerability in this section could enable a remote attacker using a specially crafted transmission to execute arbitrary code within the context of a privileged process.\\n| CVE | References | Type | Severity | Updated AOSP versions |\\n| --- | --- | --- | --- | --- |\\n| CVE-2021-0316 | A-168802990 | RCE | Critical | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2020-0471 | A-169327567 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0308 | A-158063095 | EoP | High | 8.0, 8.1, 9, 10, 11 |\\n| CVE-2021-0320 | A-169933423 | ID | High | 10, 11 |\\nGoogle Play system updates\\n\\nThe following issues are included in Project Mainline components.\\n| Component | CVE |\\n| --- | --- |\\n| Media Framework components | CVE-2021-0311, CVE-2021-0312 |\\n2021-01-05 security patch level vulnerability details\\n\\nIn the sections below, we provide details for each of the security vulnerabilities that apply to the 2021-01-05 patch level. Vulnerabilities are grouped under the component they affect. Issues are described in the tables below and include CVE ID, associated references, type of vulnerability, severity, and updated AOSP versions (where applicable). When available, we link the public change that addressed the issue to the bug ID, like the AOSP change list. When multiple changes relate to a single bug, additional references are linked to numbers following the bug ID.\\nKernel components\\n\\nThe most severe vulnerability in this section could enable a local malicious application to bypass operating system protections that isolate application data from other applications.\\n| CVE | References | Type | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2020-10732 | A-170658976 Upstream kernel | ID | High | ELF core dumps |\\n| CVE-2020-10766 | A-169505740 Upstream kernel | ID | High | Speculative execution |\\n| CVE-2020-10767 | A-156766097 Upstream kernel | ID | High | Linux kernel |\\nMediaTek components\\n\\nThis vulnerability affects MediaTek components and further details are available directly from MediaTek. The severity assessment of this issue is provided directly by MediaTek.\\n| CVE | References |  | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2021-0301 | A-172514667 M-ALPS05342361[*] |  | High | ged |\\nQualcomm components\\n\\nThese vulnerabilities affect Qualcomm components and are described in further detail in the appropriate Qualcomm security bulletin or security alert. The severity assessment of these issues is provided directly by Qualcomm.\\n| CVE | References |  | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2020-11233 | A-170138863 QC-CR#2257789 |  | High | Kernel |\\n| CVE-2020-11239 | A-168722551 QC-CR#2744826 |  | High | Display |\\n| CVE-2020-11240 | A-170138526 QC-CR#2702760 [2] [3] |  | High | Camera |\\n| CVE-2020-11250 | A-170139097 QC-CR#2734543 |  | High | Audio |\\n| CVE-2020-11261 | A-161373974 QC-CR#2742124 |  | High | Display |\\n| CVE-2020-11262 | A-170138789 QC-CR#2742711 |  | High | Display |\\nQualcomm closed-source components\\n\\nThese vulnerabilities affect Qualcomm closed-source components and are described in further detail in the appropriate Qualcomm security bulletin or security alert. The severity assessment of these issues is provided directly by Qualcomm.\\n| CVE | References |  | Severity | Component |\\n| --- | --- | --- | --- | --- |\\n| CVE-2020-11134 | A-170138862[*] |  | Critical | Closed-source component |\\n| CVE-2020-11182 | A-168722721[*] |  | Critical | Closed-source component |\\n| CVE-2020-11126 | A-170139227[*] |  | High | Closed-source component |\\n| CVE-2020-11159 | A-170138666[*] |  | High | Closed-source component |\\n| CVE-2020-11181 | A-168051034[*] |  | High | Closed-source component |\\n| CVE-2020-11235 | A-170138866[*] |  | High | Closed-source component |\\n| CVE-2020-11238 | A-170139099[*] |  | High | Closed-source component |\\n| CVE-2020-11241 | A-170139229[*] |  | High | Closed-source component |\\n| CVE-2020-11260 | A-168918332[*] |  | High | Closed-source component |\\nCommon questions and answers\\n\\nThis section answers common questions that may occur after reading this bulletin.\\n\\n1. How do I determine if my device is updated to address these issues?\\n\\nTo learn how to check a device's security patch level, see Check and update your Android version.\\n\\nSecurity patch levels of 2021-01-01 or later address all issues associated with the 2021-01-01 security patch level.\\nSecurity patch levels of 2021-01-05 or later address all issues associated with the 2021-01-05 security patch level and all previous patch levels.\\nDevice manufacturers that include these updates should set the patch string level to:\\n\\n[ro.build.version.security_patch]:[2021-01-01]\\n[ro.build.version.security_patch]:[2021-01-05]\\nFor some devices on Android 10 or later, the Google Play system update will have a date string that matches the 2021-01-01 security patch level. Please see this article for more details on how to install security updates.\\n\\n2. Why does this bulletin have two security patch levels?\\n\\nThis bulletin has two security patch levels so that Android partners have the flexibility to fix a subset of vulnerabilities that are similar across all Android devices more quickly. Android partners are encouraged to fix all issues in this bulletin and use the latest security patch level.\\n\\nDevices that use the 2021-01-01 security patch level must include all issues associated with that security patch level, as well as fixes for all issues reported in previous security bulletins.\\nDevices that use the security patch level of 2021-01-05 or newer must include all applicable patches in this (and previous) security bulletins.\\nPartners are encouraged to bundle the fixes for all issues they are addressing in a single update.\\n\\n3. What do the entries in the Type column mean?\\n\\nEntries in the Type column of the vulnerability details table reference the classification of the security vulnerability.\\n\\n| Abbreviation | Definition |\\n| --- | --- |\\n| RCE | Remote code execution |\\n| EoP | Elevation of privilege |\\n| ID | Information disclosure |\\n| DoS | Denial of service |\\n| N/A | Classification not available |\\n\\n4. What do the entries in the References column mean?\\n\\nEntries under the References column of the vulnerability details table may contain a prefix identifying the organization to which the reference value belongs.\\n\\n| Prefix | Reference |\\n| --- | --- |\\n| A- | Android bug ID |\\n| QC- | Qualcomm reference number |\\n| M- | MediaTek reference number |\\n| N- | NVIDIA reference number |\\n| B- | Broadcom reference number |\\n\\n5. What does an * next to the Android bug ID in the References column mean?\\n\\nIssues that are not publicly available have an * next to the corresponding reference ID. The update for that issue is generally contained in the latest binary drivers for Pixel devices available from the Google Developer site.\\n\\n6. Why are security vulnerabilities split between this bulletin and device\u200a/\u200apartner security bulletins, such as the Pixel bulletin?\\n\\nSecurity vulnerabilities that are documented in this security bulletin are required to declare the latest security patch level on Android devices. Additional security vulnerabilities that are documented in the device\u200a/\u200apartner security bulletins are not required for declaring a security patch level. Android device and chipset manufacturers may also publish security vulnerability details specific to their products, such as Google, Huawei, LGE, Motorola, Nokia, or Samsung.\\nVersions\\n\\n| Version | Date | Notes |\\n| --- | --- | --- |\\n| 1.0 | January 4, 2021 | Bulletin released |\\n| 1.1 | January 7, 2021 | Bulletin revised to include AOSP links and revised CVE table |\\n\\nContent and code samples on this page are subject to the licenses described in the Content License. Java and OpenJDK are trademarks or registered trademarks of Oracle and/or its affiliates.\\n\\nLast updated 2024-08-26 UTC.\"\n    },\n        {\n      \"type\": \"android_source_code\",\n      \"content\": \"dHJlZSBlODRkNTdkNTJlNGFkMjc2NTA4MjczOWJjMTQyMDViZjQxNjFiYThjCnBhcmVudCAwM2RhNDYzYjJhOTRjMzZlM2I0NmYwYTExMGVjNDM3MTBiODJkNDA0CmF1dGhvciBQaGlsaXAgUC4gTW9sdG1hbm4gPG1vbHRtYW5uQGdvb2dsZS5jb20+IDE2MDQ0NDUxNjQgLTA4MDAKY29tbWl0dGVyIGFuZHJvaWQtYnVpbGQtdGVhbSBSb2JvdCA8YW5kcm9pZC1idWlsZC10ZWFtLXJvYm90QGdvb2dsZS5jb20+IDE2MDU3Mzk4NjggKzAwMDAKClJldm9rZSBwZXJtaXNzaW9uIG9uIG5vbi1ydW50aW1lIC0+IHJ1bnRpbWUgdXBncmFkZQoKTm90IG9ubHkgb24gbm9ybWFsIC0+IHJ1bnRpbWUuCgpUZXN0OiBhdGVzdCBQZXJtaXNzaW9uRXNjYWxhdGlvblRlc3QKQnVnOiAxNTQ1MDUyNDAsIDE2ODMxOTY3MApDaGFuZ2UtSWQ6IElmM2I0MjAwNjdiNGQ3MTExZGNmNjdhZTZmOThlNDIxNzYxNThiNjc5Ck1lcmdlZC1JbjogSWYzYjQyMDA2N2I0ZDcxMTFkY2Y2N2FlNmY5OGU0MjE3NjE1OGI2NzkKKGNoZXJyeSBwaWNrZWQgZnJvbSBjb21taXQgMzNlMjRjODgzYzU3OTdmZTdiYTA1NDY4YmRlOTY3ZmIwZTQ2ZTY2ZCkK\"\n    },\n    {\n     \"type\": \"android_source_code\",\n      \"content\": \"dHJlZSAyNDBiM2NlMGY3YTkzNTliNzM2ZDBkODUzM2Y0MWVlZGQwYWE2ZTYwCnBhcmVudCA5MGNmZTE3NjQzYWE0ZWNiZTdjYmZiMWM3ODcyMTc0NTZmNzY0ZTA4CmF1dGhvciBEbWl0cnkgRGVtZW50eWV2IDxkZW1lbnR5ZXZAZ29vZ2xlLmNvbT4gMTYwNDk2OTA0OCAtMDgwMApjb21taXR0ZXIgYW5kcm9pZC1idWlsZC10ZWFtIFJvYm90IDxhbmRyb2lkLWJ1aWxkLXRlYW0tcm9ib3RAZ29vZ2xlLmNvbT4gMTYwNTczOTg4OCArMDAwMAoKUHJvdGVjdCBHcmFudENyZWRlbnRpYWxzUGVybWlzc2lvbkFjdGl2aXR5IGFnYWluc3Qgb3ZlcmxheS4KCkJ1ZzogMTY5NzYzODE0ClRlc3Q6IG1hbnVhbApDaGFuZ2UtSWQ6IEkxNWRkMjI3OTFmY2M2MWVmMDJiMDZhZDUxZDllNDQwOWQxMWMwMTgxCihjaGVycnkgcGlja2VkIGZyb20gY29tbWl0IGY0NWRjZmUxZjVlZDc0ZGNlYzE1Nzk5ZjJhYmQ5ZTVlY2JiZWQ0YjcpCg==\"\n    }\n  ]\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 862 | Missing Authorization | Class | Allowed-with-Review | sparse | 0.483 |\n| 2 | 1021 | Improper Restriction of Rendered UI Layers or Frames | Base | Allowed | sparse | 0.467 |\n| 3 | 908 | Use of Uninitialized Resource | Base | Allowed | sparse | 0.431 |\n| 4 | 223 | Omission of Security-relevant Information | Base | Allowed | sparse | 0.429 |\n| 5 | 732 | Incorrect Permission Assignment for Critical Resource | Class | Allowed-with-Review | sparse | 0.426 |\n| 6 | 279 | Incorrect Execution-Assigned Permissions | Variant | Allowed | dense | 0.561 |\n| 7 | 939 | Improper Authorization in Handler for Custom URL Scheme | Base | Allowed | graph | 0.002 |\n| 8 | 248 | Uncaught Exception | Base | Allowed | sparse | 0.420 |\n| 9 | 667 | Improper Locking | Class | Allowed-with-Review | sparse | 0.419 |\n| 10 | 665 | Improper Initialization | Class | Discouraged | sparse | 0.410 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-862: Missing Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-3597:** Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.\n\n\n\n\n## CWE-1021: Improper Restriction of Rendered UI Layers or Frames\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.\n\n### Extended Description\nA web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.\n\n### Alternative Terms\nClickjacking\nUI Redress Attack\nTapjacking: \"Tapjacking\" is similar to clickjacking, except it is used for mobile applications in which the user \"taps\" the application instead of performing a mouse click.\n\n### Relationships\nChildOf -> CWE-441\nChildOf -> CWE-610\nChildOf -> CWE-451\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2017-7440:** E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message\n- **CVE-2017-5697:** Hardware/firmware product has insufficient clickjacking protection in its web user interface\n- **CVE-2017-4015:** Clickjacking in data-loss prevention product via HTTP response header.\n\n\n\n\n## CWE-908: Use of Uninitialized Resource\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product uses or accesses a resource that has not been initialized.\n\n### Extended Description\nWhen a resource has not been properly initialized, the product may behave unexpectedly. This may lead to a crash or invalid memory access, but the consequences vary depending on the type of resource and how it is used within the product.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-665\nChildOf -> CWE-665\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2019-9805:** Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption.\n- **CVE-2008-4197:** Use of uninitialized memory may allow code execution.\n- **CVE-2008-2934:** Free of an uninitialized pointer leads to crash and possible code execution.\n\n\n\n\n## CWE-223: Omission of Security-relevant Information\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-221\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1029:** Login attempts are not recorded if the user disconnects before the maximum number of tries.\n- **CVE-2002-1839:** Sender's IP address not recorded in outgoing e-mail.\n- **CVE-2000-0542:** Failed authentication attempts are not recorded if later attempt succeeds.\n\n\n\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n### Extended Description\nWhen a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n**Comments:** Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2022-29527:** Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.\n- **CVE-2009-3482:** Anti-virus product sets insecure \"Everyone: Full Control\" permissions for files under the \"Program Files\" folder, allowing attackers to replace executables with Trojan horses.\n- **CVE-2009-3897:** Product creates directories with 0777 permissions at installation, allowing users to gain privileges and access a socket used for authentication.\n\n\n\n\n## CWE-279: Incorrect Execution-Assigned Permissions\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nWhile it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-732\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2002-0265:** Log files opened read/write.\n- **CVE-2003-0876:** Log files opened read/write.\n- **CVE-2002-1694:** Log files opened read/write.\n\n\n\n\n## CWE-939: Improper Authorization in Handler for Custom URL Scheme\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.\n\n### Extended Description\nMobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's discretion which may open security flaws in the application. An example could be potentially dangerous functionality such as modifying files through a custom URL scheme.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-862\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2013-5725:** URL scheme has action replace which requires no user prompt and allows remote attackers to perform undesired actions.\n- **CVE-2013-5726:** URL scheme has action follow and favorite which allows remote attackers to force user to perform undesired actions.\n\n\n\n\n## CWE-248: Uncaught Exception\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nAn exception is thrown from a function, but it is not caught.\n\n### Extended Description\nWhen an exception is not caught, it may cause the program to crash or expose sensitive information.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-705\nChildOf -> CWE-755\nChildOf -> CWE-703\nChildOf -> CWE-703\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2023-41151:** SDK for OPC Unified Architecture (OPC UA) server has uncaught exception when a socket is blocked for writing but the server tries to send an error\n- **CVE-2023-21087:** Java code in a smartphone OS can encounter a \"boot loop\" due to an uncaught exception\n\n\n\n\n## CWE-667: Improper Locking\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n### Extended Description\n\n\nLocking is a type of synchronization behavior that ensures that multiple independently-operating processes or threads do not interfere with each other when accessing the same resource. All processes/threads are expected to follow the same steps for locking. If these steps are not followed precisely - or if no locking is done at all - then another process/thread could modify the shared resource in a way that is not visible or predictable to the original process. This can lead to data or memory corruption, denial of service, etc.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-662\nChildOf -> CWE-662\nChildOf -> CWE-662\nChildOf -> CWE-662\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, race conditions, reentrant functions, etc. CWE-662 and its children - including CWE-667, CWE-820, CWE-821, and others - may need to be modified significantly, along with their relationships.\n\n\n\n### Observed Examples\n- **CVE-2021-1782:** Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV.\n- **CVE-2009-0935:** Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice\n- **CVE-2010-4210:** function in OS kernel unlocks a mutex that was not previously locked, causing a panic or overwrite of arbitrary memory.\n\n\n\n\n## CWE-665: Improper Initialization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n### Extended Description\nThis can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2001-1471:** chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.\n- **CVE-2008-3637:** Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.\n- **CVE-2008-4197:** Use of uninitialized memory may allow code execution.\n\n"
  },
  "timestamp": "2025-04-02 05:12:35",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 7059.649869757002,
      "search_source": "unknown"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 6872.84666308641,
      "search_source": "unknown"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 6688.224923294295,
      "search_source": "unknown"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 6684.853986843432,
      "search_source": "unknown"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 6595.2920578747535,
      "search_source": "unknown"
    }
  ]
}