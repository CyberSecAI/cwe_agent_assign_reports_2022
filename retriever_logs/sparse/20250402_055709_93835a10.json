{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nThe impact of this vulnerability is that Aristas EOS eAPI **may skip re-evaluating user credentials when certificate based authentication is used**, which allows remote attackers to access the device via eAPI.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **may skip re-evaluating user credentials when certificate based authentication is used**\n- **impact:** access the device via eAPI\n- **attacker:** remote attackers\n- **product:** Aristas EOS\n- **component:** eAPI\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability:\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from the eAPI not re-evaluating user credentials when certificate-based authentication is used, potentially allowing unauthorized access.\n\n**Weaknesses/Vulnerabilities:**\n- Improper session management or caching of authentication results in eAPI.\n- Failure to re-authenticate users when using certificate-based authentication with eAPI.\n\n**Impact of Exploitation:**\n- Remote attackers can gain unauthorized access to the device via eAPI.\n- Potential for malicious activities once access is gained.\n-  The attacker can execute commands on the device.\n\n**Attack Vectors:**\n- Remote network access via eAPI using a valid user certificate.\n\n**Required Attacker Capabilities/Position:**\n- The attacker must have access to a valid user certificate configured for eAPI authentication.\n- Network connectivity to the affected device's eAPI endpoint.\n\n**Additional Notes:**\n- The vulnerability is platform-independent, affecting all systems running vulnerable EOS versions.\n- The advisory provides steps to mitigate the vulnerability by disabling certificate-based authentication via eAPI and lists remediated software versions as well as a hotfix.\n- The advisory provides ways to identify potential exploitation of the vulnerability by monitoring accounting logs on AAA servers and monitoring eAPI request activity.\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 305 | Authentication Bypass by Primary Weakness | Base | Allowed | sparse | 0.403 |\n| 2 | 295 | Improper Certificate Validation | Base | Allowed | sparse | 0.233 |\n| 3 | 522 | Insufficiently Protected Credentials | Class | Allowed-with-Review | sparse | 0.232 |\n| 4 | 347 | Improper Verification of Cryptographic Signature | Base | Allowed | sparse | 0.217 |\n| 5 | 798 | Use of Hard-coded Credentials | Base | Allowed | sparse | 0.216 |\n| 6 | 289 | Authentication Bypass by Alternate Name | Base | Allowed | dense | 0.545 |\n| 7 | 178 | Improper Handling of Case Sensitivity | Base | Allowed | graph | 0.002 |\n| 8 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.212 |\n| 9 | 325 | Missing Cryptographic Step | Base | Allowed | sparse | 0.211 |\n| 10 | 121 | Stack-based Buffer Overflow | Variant | Allowed | sparse | 0.209 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-305: Authentication Bypass by Primary Weakness\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Most \"authentication bypass\" errors are resultant, not primary.\n\n\n\n### Observed Examples\n- **CVE-2002-1374:** The provided password is only compared against the first character of the real password.\n- **CVE-2000-0979:** The password is not properly checked, which allows remote attackers to bypass access controls by sending a 1-byte password that matches the first character of the real password.\n- **CVE-2001-0088:** Chain: Forum software does not properly initialize an array, which inadvertently sets the password to a single character, allowing remote attackers to easily guess the password and gain administrative privileges.\n\n\n\n\n## CWE-295: Improper Certificate Validation\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not validate, or incorrectly validates, a certificate.\n\n### Extended Description\nWhen a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\nChildOf -> CWE-287\nPeerOf -> CWE-322\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2019-12496:** A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default.\n- **CVE-2014-1266:** chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).\n- **CVE-2021-22909:** Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).\n\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\nChildOf -> CWE-287\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30018:** A messaging platform serializes all elements of User/Group objects, making private information available to adversaries\n- **CVE-2022-29959:** Initialization file contains credentials that can be decoded using a \"simple string transformation\"\n- **CVE-2022-35411:** Python-based RPC framework enables pickle functionality by default, allowing clients to unpickle untrusted data.\n\n\n\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-345\nChildOf -> CWE-345\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2002-1796:** Does not properly verify signatures for \"trusted\" entities.\n- **CVE-2005-2181:** Insufficient verification allows spoofing.\n- **CVE-2005-2182:** Insufficient verification allows spoofing.\n\n\n\n\n## CWE-798: Use of Hard-coded Credentials\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product contains hard-coded credentials, such as a password or cryptographic key.\n\n### Extended Description\n\n\nThere are two main variations:\n\n\n  - Inbound: the product contains an authentication mechanism that checks the input credentials against a hard-coded set of credentials. In this variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. It can also be difficult for the administrator to detect.\n\n  - Outbound: the product connects to another system or component, and it contains hard-coded credentials for connecting to that component. This variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password that can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product.\n\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1391\nChildOf -> CWE-287\nChildOf -> CWE-344\nChildOf -> CWE-671\nPeerOf -> CWE-257\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-29953:** Condition Monitor firmware has a maintenance interface with hard-coded credentials\n- **CVE-2022-29960:** Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation\n- **CVE-2022-29964:** Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n\n\n\n## CWE-289: Authentication Bypass by Alternate Name\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps equivalent encodings, canonicalization, authorization, multiple trailing slash, trailing space, mixed case, and other equivalence issues.\n\n**[Theoretical]** Alternate names are useful in data driven manipulation attacks, not just for authentication.\n\n\n\n### Observed Examples\n- **CVE-2003-0317:** Protection mechanism that restricts URL access can be bypassed using URL encoding.\n- **CVE-2004-0847:** Bypass of authentication for files using \"\\\" (backslash) or \"%5C\" (encoded backslash).\n\n\n\n\n## CWE-178: Improper Handling of Case Sensitivity\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.\n\n### Extended Description\n\n\nImproperly handled case sensitive data can lead to several possible consequences, including:\n\n\n  - case-insensitive passwords reducing the size of the key space, making brute force attacks easier\n\n  - bypassing filters or access controls using alternate names\n\n  - multiple interpretation errors using alternate names.\n\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-706\nChildOf -> CWE-706\nCanPrecede -> CWE-433\nCanPrecede -> CWE-289\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Research Gap]** These are probably under-studied in Windows and Mac environments, where file names are case-insensitive and thus are subject to equivalence manipulations involving case.\n\n\n\n### Observed Examples\n- **CVE-2000-0499:** Application server allows attackers to bypass execution of a jsp page and read the source code using an upper case JSP extension in the request.\n- **CVE-2000-0497:** The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".\n- **CVE-2000-0498:** The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".\n\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n### Extended Description\n\n\nAttackers may be able to bypass weak authentication faster and/or with less effort than expected.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2021-3116:** Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)\n\n\n\n\n## CWE-325: Missing Cryptographic Step\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-573\nPeerOf -> CWE-358\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps incomplete/missing security check.\n\n**[Relationship]** Can be resultant.\n\n\n\n### Observed Examples\n- **CVE-2001-1585:** Missing challenge-response step allows authentication bypass using public key.\n\n\n\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nStack Overflow: \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\n### Relationships\nChildOf -> CWE-788\nChildOf -> CWE-787\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Other]** Stack-based buffer overflows can instantiate in return address overwrites, stack pointer overwrites or frame pointer overwrites. They can also be considered function pointer overwrites, array indexer overwrites or write-what-where condition, etc.\n\n\n\n### Observed Examples\n- **CVE-2021-35395:** Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.\n\n",
  "keyphrases": {
    "base_query": "## Vulnerability Description\nThe impact of this vulnerability is that Aristas EOS eAPI **may skip re-evaluating user credentials when certificate based authentication is used**, which allows remote attackers to access the device via eAPI.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **may skip re-evaluating user credentials when certificate based authentication is used**\n- **impact:** access the device via eAPI\n- **attacker:** remote attackers\n- **product:** Aristas EOS\n- **component:** eAPI\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability:\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from the eAPI not re-evaluating user credentials when certificate-based authentication is used, potentially allowing unauthorized access.\n\n**Weaknesses/Vulnerabilities:**\n- Improper session management or caching of authentication results in eAPI.\n- Failure to re-authenticate users when using certificate-based authentication with eAPI.\n\n**Impact of Exploitation:**\n- Remote attackers can gain unauthorized access to the device via eAPI.\n- Potential for malicious activities once access is gained.\n-  The attacker can execute commands on the device.\n\n**Attack Vectors:**\n- Remote network access via eAPI using a valid user certificate.\n\n**Required Attacker Capabilities/Position:**\n- The attacker must have access to a valid user certificate configured for eAPI authentication.\n- Network connectivity to the affected device's eAPI endpoint.\n\n**Additional Notes:**\n- The vulnerability is platform-independent, affecting all systems running vulnerable EOS versions.\n- The advisory provides steps to mitigate the vulnerability by disabling certificate-based authentication via eAPI and lists remediated software versions as well as a hotfix.\n- The advisory provides ways to identify potential exploitation of the vulnerability by monitoring accounting logs on AAA servers and monitoring eAPI request activity.\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 305 | Authentication Bypass by Primary Weakness | Base | Allowed | sparse | 0.403 |\n| 2 | 295 | Improper Certificate Validation | Base | Allowed | sparse | 0.233 |\n| 3 | 522 | Insufficiently Protected Credentials | Class | Allowed-with-Review | sparse | 0.232 |\n| 4 | 347 | Improper Verification of Cryptographic Signature | Base | Allowed | sparse | 0.217 |\n| 5 | 798 | Use of Hard-coded Credentials | Base | Allowed | sparse | 0.216 |\n| 6 | 289 | Authentication Bypass by Alternate Name | Base | Allowed | dense | 0.545 |\n| 7 | 178 | Improper Handling of Case Sensitivity | Base | Allowed | graph | 0.002 |\n| 8 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.212 |\n| 9 | 325 | Missing Cryptographic Step | Base | Allowed | sparse | 0.211 |\n| 10 | 121 | Stack-based Buffer Overflow | Variant | Allowed | sparse | 0.209 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-305: Authentication Bypass by Primary Weakness\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Most \"authentication bypass\" errors are resultant, not primary.\n\n\n\n### Observed Examples\n- **CVE-2002-1374:** The provided password is only compared against the first character of the real password.\n- **CVE-2000-0979:** The password is not properly checked, which allows remote attackers to bypass access controls by sending a 1-byte password that matches the first character of the real password.\n- **CVE-2001-0088:** Chain: Forum software does not properly initialize an array, which inadvertently sets the password to a single character, allowing remote attackers to easily guess the password and gain administrative privileges.\n\n\n\n\n## CWE-295: Improper Certificate Validation\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not validate, or incorrectly validates, a certificate.\n\n### Extended Description\nWhen a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\nChildOf -> CWE-287\nPeerOf -> CWE-322\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2019-12496:** A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default.\n- **CVE-2014-1266:** chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).\n- **CVE-2021-22909:** Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).\n\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\nChildOf -> CWE-287\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30018:** A messaging platform serializes all elements of User/Group objects, making private information available to adversaries\n- **CVE-2022-29959:** Initialization file contains credentials that can be decoded using a \"simple string transformation\"\n- **CVE-2022-35411:** Python-based RPC framework enables pickle functionality by default, allowing clients to unpickle untrusted data.\n\n\n\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-345\nChildOf -> CWE-345\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2002-1796:** Does not properly verify signatures for \"trusted\" entities.\n- **CVE-2005-2181:** Insufficient verification allows spoofing.\n- **CVE-2005-2182:** Insufficient verification allows spoofing.\n\n\n\n\n## CWE-798: Use of Hard-coded Credentials\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product contains hard-coded credentials, such as a password or cryptographic key.\n\n### Extended Description\n\n\nThere are two main variations:\n\n\n  - Inbound: the product contains an authentication mechanism that checks the input credentials against a hard-coded set of credentials. In this variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. It can also be difficult for the administrator to detect.\n\n  - Outbound: the product connects to another system or component, and it contains hard-coded credentials for connecting to that component. This variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password that can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product.\n\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1391\nChildOf -> CWE-287\nChildOf -> CWE-344\nChildOf -> CWE-671\nPeerOf -> CWE-257\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-29953:** Condition Monitor firmware has a maintenance interface with hard-coded credentials\n- **CVE-2022-29960:** Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation\n- **CVE-2022-29964:** Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n\n\n\n## CWE-289: Authentication Bypass by Alternate Name\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps equivalent encodings, canonicalization, authorization, multiple trailing slash, trailing space, mixed case, and other equivalence issues.\n\n**[Theoretical]** Alternate names are useful in data driven manipulation attacks, not just for authentication.\n\n\n\n### Observed Examples\n- **CVE-2003-0317:** Protection mechanism that restricts URL access can be bypassed using URL encoding.\n- **CVE-2004-0847:** Bypass of authentication for files using \"\\\" (backslash) or \"%5C\" (encoded backslash).\n\n\n\n\n## CWE-178: Improper Handling of Case Sensitivity\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.\n\n### Extended Description\n\n\nImproperly handled case sensitive data can lead to several possible consequences, including:\n\n\n  - case-insensitive passwords reducing the size of the key space, making brute force attacks easier\n\n  - bypassing filters or access controls using alternate names\n\n  - multiple interpretation errors using alternate names.\n\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-706\nChildOf -> CWE-706\nCanPrecede -> CWE-433\nCanPrecede -> CWE-289\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Research Gap]** These are probably under-studied in Windows and Mac environments, where file names are case-insensitive and thus are subject to equivalence manipulations involving case.\n\n\n\n### Observed Examples\n- **CVE-2000-0499:** Application server allows attackers to bypass execution of a jsp page and read the source code using an upper case JSP extension in the request.\n- **CVE-2000-0497:** The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".\n- **CVE-2000-0498:** The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".\n\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n### Extended Description\n\n\nAttackers may be able to bypass weak authentication faster and/or with less effort than expected.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2021-3116:** Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)\n\n\n\n\n## CWE-325: Missing Cryptographic Step\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-573\nPeerOf -> CWE-358\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps incomplete/missing security check.\n\n**[Relationship]** Can be resultant.\n\n\n\n### Observed Examples\n- **CVE-2001-1585:** Missing challenge-response step allows authentication bypass using public key.\n\n\n\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nStack Overflow: \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\n### Relationships\nChildOf -> CWE-788\nChildOf -> CWE-787\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Other]** Stack-based buffer overflows can instantiate in return address overwrites, stack pointer overwrites or frame pointer overwrites. They can also be considered function pointer overwrites, array indexer overwrites or write-what-where condition, etc.\n\n\n\n### Observed Examples\n- **CVE-2021-35395:** Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.\n\n"
  },
  "timestamp": "2025-04-02 05:57:09",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "score": 4100.702921237221,
      "search_source": "unknown"
    },
    {
      "cwe_id": "798",
      "name": "Use of Hard-coded Credentials",
      "score": 4015.844300501288,
      "search_source": "unknown"
    },
    {
      "cwe_id": "178",
      "name": "Improper Handling of Case Sensitivity",
      "score": 4014.0540973689554,
      "search_source": "unknown"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "score": 3960.9351230993598,
      "search_source": "unknown"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 3911.879601002748,
      "search_source": "unknown"
    }
  ]
}