{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nFor Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.\n\n### Vulnerability Description Key Phrases\n- **impact:** access protected resources within the WEB-INF directory\n- **vector:** doubly encoded path\n- **product:** Eclipse Jetty\n- **version:** <= 9.4.40, <= 10.0.2, <= 11.0.2\n- **component:** ConcatServlet\n\n## CVE Reference Links Content Summary\n```json\n{\n  \"CVE-2021-28169\": {\n    \"Description\": \"Requests to the `ConcatServlet` and `WelcomeFilter` are able to access protected resources within the `WEB-INF` directory. This can reveal sensitive information regarding the implementation of a web application. This occurs because both `ConcatServlet` and `WelcomeFilter` decode the supplied path to verify it is not within the `WEB-INF` or `META-INF` directories. It then uses this decoded path to call `RequestDispatcher` which will also do decoding of the path. This double decoding allows paths with a doubly encoded `WEB-INF` to bypass this security check.\",\n    \"Root cause\": \"The vulnerability is caused by double decoding of the URL path, in the `ConcatServlet` and `WelcomeFilter`, when checking if a resource resides within `WEB-INF` or `META-INF` directories.\",\n    \"Weaknesses\": [\n      \"Improper Input Validation (CWE-20)\"\n    ],\n    \"Impact\": \"Successful exploitation of this vulnerability could lead to disclosure of sensitive information about the web application's implementation by accessing files in the WEB-INF directory.\",\n    \"Attack vectors\": \"The attack vector is through HTTP requests to the ConcatServlet or WelcomeFilter servlets using a specially crafted URL with double encoding. This allows attackers to bypass security checks and access protected resources.\",\n    \"Required attacker capabilities\": \"The attacker needs to be able to send HTTP requests with a crafted URI to the targeted server hosting the vulnerable web application. No authentication is required to exploit this vulnerability.\"\n  }\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 174 | Double Decoding of the Same Data | Variant | Allowed | sparse | 0.211 |\n| 2 | 173 | Improper Handling of Alternate Encoding | Variant | Allowed | sparse | 0.156 |\n| 3 | 611 | Improper Restriction of XML External Entity Reference | Base | Allowed | sparse | 0.123 |\n| 4 | 176 | Improper Handling of Unicode Encoding | Variant | Allowed | sparse | 0.115 |\n| 5 | 23 | Relative Path Traversal | Base | Allowed | sparse | 0.113 |\n| 6 | 536 | Servlet Runtime Error Message Containing Sensitive Information | Variant | Allowed | dense | 0.515 |\n| 7 | 289 | Authentication Bypass by Alternate Name | Base | Allowed | graph | 0.002 |\n| 8 | 923 | Improper Restriction of Communication Channel to Intended Endpoints | Class | Allowed-with-Review | sparse | 0.112 |\n| 9 | 522 | Insufficiently Protected Credentials | Class | Allowed-with-Review | sparse | 0.111 |\n| 10 | 552 | Files or Directories Accessible to External Parties | Base | Allowed | sparse | 0.111 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-174: Double Decoding of the Same Data\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-172\nChildOf -> CWE-675\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Research Gap]** Probably under-studied.\n\n\n\n### Observed Examples\n- **CVE-2004-1315:** Forum software improperly URL decodes the highlight parameter when extracting text to highlight, which allows remote attackers to execute arbitrary PHP code by double-encoding the highlight value so that special characters are inserted into the result.\n- **CVE-2004-1939:** XSS protection mechanism attempts to remove \"/\" that could be used to close tags, but it can be bypassed using double encoded slashes (%252F)\n- **CVE-2001-0333:** Directory traversal using double encoding.\n\n\n\n\n## CWE-173: Improper Handling of Alternate Encoding\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-172\nCanPrecede -> CWE-289\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n\n\n\n## CWE-611: Improper Restriction of XML External Entity Reference\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\n### Extended Description\n\n\nXML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as \"file:///c:/winnt/win.ini\" designates (in Windows) the file C:\\Winnt\\win.ini, or file:///etc/passwd designates the password file in Unix-based systems. Using URIs with other schemes such as http://, the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.\n\n\n### Alternative Terms\nXXE: An acronym used for the term \"XML eXternal Entities\"\n\n### Relationships\nChildOf -> CWE-610\nChildOf -> CWE-610\nPeerOf -> CWE-441\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** CWE-918 (SSRF) and CWE-611 (XXE) are closely related, because they both involve web-related technologies and can launch outbound requests to unexpected destinations. However, XXE can be performed client-side, or in other contexts in which the software is not acting directly as a server, so the \"Server\" portion of the SSRF acronym does not necessarily apply.\n\n\n\n### Observed Examples\n- **CVE-2022-42745:** Recruiter software allows reading arbitrary files using XXE\n- **CVE-2005-1306:** A browser control can allow remote attackers to determine the existence of files via Javascript containing XML script.\n- **CVE-2012-5656:** XXE during SVG image conversion\n\n\n\n\n## CWE-176: Improper Handling of Unicode Encoding\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product does not properly handle when an input contains Unicode encoding.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-172\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2000-0884:** Server allows remote attackers to read documents outside of the web root, and possibly execute arbitrary commands, via malformed URLs that contain Unicode encoded characters.\n- **CVE-2001-0709:** Server allows a remote attacker to obtain source code of ASP files via a URL encoded with Unicode.\n- **CVE-2001-0669:** Overlaps interaction error.\n\n\n\n\n## CWE-23: Relative Path Traversal\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n### Extended Description\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n### Alternative Terms\nZip Slip: \"Zip slip\" is an attack that uses file archives (e.g., ZIP, tar, rar, etc.) that contain filenames with path traversal sequences that cause the files to be written outside of the directory under which the archive is expected to be extracted [REF-1282]. It is most commonly used for relative path traversal (CWE-23) and link following (CWE-59).\n\n### Relationships\nChildOf -> CWE-22\nChildOf -> CWE-22\nChildOf -> CWE-22\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2024-37032:** Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama\n- **CVE-2022-45918:** Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)\n- **CVE-2019-20916:** Python package manager does not correctly restrict the filename specified in a Content-Disposition header, allowing arbitrary file read using path traversal sequences such as \"../\"\n\n\n\n\n## CWE-536: Servlet Runtime Error Message Containing Sensitive Information\n**Abstraction:** Variant\n**Status:** Incomplete\n\n### Description\nA servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-211\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n\n\n\n## CWE-289: Authentication Bypass by Alternate Name\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps equivalent encodings, canonicalization, authorization, multiple trailing slash, trailing space, mixed case, and other equivalence issues.\n\n**[Theoretical]** Alternate names are useful in data driven manipulation attacks, not just for authentication.\n\n\n\n### Observed Examples\n- **CVE-2003-0317:** Protection mechanism that restricts URL access can be bypassed using URL encoding.\n- **CVE-2004-0847:** Bypass of authentication for files using \"\\\" (backslash) or \"%5C\" (encoded backslash).\n\n\n\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n### Extended Description\n\n\nAttackers might be able to spoof the intended endpoint from a different system or process, thus gaining the same level of access as the intended endpoint.\n\n\nWhile this issue frequently involves authentication between network-based clients and servers, other types of communication channels and endpoints can have this weakness.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30319:** S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address.\n- **CVE-2022-22547:** A troubleshooting tool exposes a web server on a random port between 9000-65535 that could be used for information gathering\n- **CVE-2022-4390:** A WAN interface on a router has firewall restrictions enabled for IPv4, but it does not for IPv6, which is enabled by default\n\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\nChildOf -> CWE-287\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30018:** A messaging platform serializes all elements of User/Group objects, making private information available to adversaries\n- **CVE-2022-29959:** Initialization file contains credentials that can be decoded using a \"simple string transformation\"\n- **CVE-2022-35411:** Python-based RPC framework enables pickle functionality by default, allowing clients to unpickle untrusted data.\n\n\n\n\n## CWE-552: Files or Directories Accessible to External Parties\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product makes files or directories accessible to unauthorized actors, even though they should not be.\n\n### Extended Description\n\n\nWeb servers, FTP servers, and similar servers may store a set of files underneath a \"root\" directory that is accessible to the server's users. Applications may store sensitive files underneath this root without also using access control to limit which users may request those files, if any. Alternately, an application might package multiple files or directories into an archive file (e.g., ZIP or tar), but the application might not exclude sensitive files that are underneath those directories.\n\n\nIn cloud technologies and containers, this weakness might present itself in the form of misconfigured storage accounts that can be read or written by a public or anonymous user.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-668\nChildOf -> CWE-668\nChildOf -> CWE-285\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2005-1835:** Data file under web root.\n\n",
  "keyphrases": {},
  "timestamp": "2025-04-02 05:25:09",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "611",
      "name": "Improper Restriction of XML External Entity Reference",
      "score": 4266.946379106837,
      "search_source": "base_query"
    },
    {
      "cwe_id": "23",
      "name": "Relative Path Traversal",
      "score": 4211.773570349791,
      "search_source": "base_query"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 4165.273027515257,
      "search_source": "base_query"
    },
    {
      "cwe_id": "923",
      "name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "score": 4061.2354880877124,
      "search_source": "base_query"
    },
    {
      "cwe_id": "174",
      "name": "Double Decoding of the Same Data",
      "score": 4042.5132476333906,
      "search_source": "base_query"
    }
  ]
}