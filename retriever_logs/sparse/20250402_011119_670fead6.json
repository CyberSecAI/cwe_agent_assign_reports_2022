{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nIt was possible to bypass 2FA for LDAP users and access some specific pages with Basic Authentication in GitLab 14.1.1 and above.\n\n### Vulnerability Description Key Phrases\n- **impact:** bypass 2FA for LDAP users\n- **product:** GitLab\n- **version:** 14.1.1 and above\n\n## CVE Reference Links Content Summary\n```json\n{\n  \"CVE_data_meta\": {\n    \"ASSIGNER\": \"cve@gitlab.com\",\n    \"CVE_ID\": \"CVE-2021-39890\",\n    \"STATE\": \"PUBLIC\"\n  },\n  \"affects\": {\n    \"vendor\": {\n      \"vendor_data\": [\n        {\n          \"product\": {\n            \"product_data\": [\n              {\n                \"product_name\": \"GitLab\",\n                \"version\": {\n                  \"version_data\": [\n                    {\n                      \"version_affected\": \"<\",\n                      \"version_name\": \"14.3\",\n                      \"version_value\": \"14.3.6\"\n                    },\n                    {\n                      \"version_affected\": \">=\",\n                      \"version_name\": \"14.4\",\n                      \"version_value\": \"14.4.0\"\n                    },\n                    {\n                      \"version_affected\": \"<\",\n                      \"version_name\": \"14.4\",\n                      \"version_value\": \"14.4.5\"\n                    },\n                      {\n                      \"version_affected\": \">=\",\n                      \"version_name\": \"14.5\",\n                      \"version_value\": \"14.5.0\"\n                    },\n                    {\n                      \"version_affected\": \"<\",\n                      \"version_name\": \"14.5\",\n                      \"version_value\": \"14.5.3\"\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          \"vendor_name\": \"GitLab\"\n        }\n      ]\n    }\n  },\n  \"credit\": [\n    {\n      \"lang\": \"en\",\n      \"value\": \"Thanks @vakzz for reporting this vulnerability through our HackerOne bug bounty program.\"\n    }\n  ],\n  \"data_format\": \"MITRE\",\n  \"data_type\": \"CVE\",\n  \"data_version\": \"4.0\",\n  \"description\": {\n    \"description_data\": [\n      {\n        \"lang\": \"en\",\n        \"value\": \"An information disclosure vulnerability exists in GitLab CE/EE versions 14.3 before 14.3.6, all versions starting from 14.4 before 14.4.5, and all versions starting from 14.5 before 14.5.3. When an attacker is able to manipulate the markdown of a repository, it may be possible to include a specially crafted image that, when rendered by another user, may cause the target user's local files to be disclosed.\"\n      }\n    ]\n  },\n  \"impact\": {\n    \"cvss\": {\n      \"attackComplexity\": \"LOW\",\n      \"attackVector\": \"NETWORK\",\n      \"availabilityImpact\": \"NONE\",\n      \"baseScore\": 4.3,\n      \"baseSeverity\": \"MEDIUM\",\n      \"confidentialityImpact\": \"LOW\",\n      \"integrityImpact\": \"NONE\",\n      \"privilegesRequired\": \"NONE\",\n      \"scope\": \"UNCHANGED\",\n      \"userInteraction\": \"REQUIRED\",\n      \"vectorString\": \"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N\",\n      \"version\": \"3.1\"\n    }\n  },\n  \"problemtype\": {\n    \"problemtype_data\": [\n      {\n        \"description\": [\n          {\n            \"lang\": \"en\",\n            \"value\": \"CWE-200\"\n          }\n        ]\n      }\n    ]\n  },\n  \"references\": {\n    \"reference_data\": [\n      {\n        \"name\": \"https://gitlab.com/gitlab-org/cves/-/blob/master/2021/CVE-2021-39890.json\",\n        \"refsource\": \"CONFIRM\",\n        \"url\": \"https://gitlab.com/gitlab-org/cves/-/blob/master/2021/CVE-2021-39890.json\"\n      },\n      {\n        \"name\": \"https://gitlab.com/gitlab-org/gitlab/-/issues/342724\",\n        \"refsource\": \"MISC\",\n        \"url\": \"https://gitlab.com/gitlab-org/gitlab/-/issues/342724\"\n      }\n    ]\n  },\n  \"solution\": [\n      {\n          \"lang\": \"en\",\n          \"value\": \"Upgrade to versions 14.3.6, 14.4.5, 14.5.3 or above.\"\n      }\n  ]\n}\n```\nBased on the provided JSON data:\n\n**Root Cause:**\nThe vulnerability stems from the way GitLab handles markdown rendering, specifically how it processes images. An attacker can manipulate the markdown in a repository to include a specially crafted image.\n\n**Weaknesses/Vulnerabilities:**\n- Information Disclosure: The vulnerability allows for the potential disclosure of local files from a user's machine when they render the malicious markdown containing the crafted image.\n- Improper Input Handling/Sanitization: The system does not properly sanitize or handle the image URLs in the markdown, leading to the possibility of accessing local files.\n\n**Impact of Exploitation:**\n- Confidentiality Impact: An attacker could potentially gain access to sensitive local files on the machine of a user who renders the malicious markdown.\n- User impact: A user who views a maliciously crafted markdown page will have their local files disclosed.\n\n**Attack Vectors:**\n- Network: An attacker manipulates the markdown in a GitLab repository, making the exploit accessible to any user that views the crafted markdown.\n- User Interaction: The vulnerability is triggered when a user views the markdown containing a specially crafted image.\n\n**Required Attacker Capabilities/Position:**\n- The attacker needs to be able to manipulate the markdown of a repository, which typically requires write access to a repository.\n- The attacker does not need any special privileges on the target system.\n- The attacker needs to entice a target user to render the malicious markdown page.\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 305 | Authentication Bypass by Primary Weakness | Base | Allowed | sparse | 0.063 |\n| 2 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.057 |\n| 3 | 863 | Incorrect Authorization | Class | Allowed-with-Review | sparse | 0.049 |\n| 4 | 287 | Improper Authentication | Class | Discouraged | sparse | 0.048 |\n| 5 | 639 | Authorization Bypass Through User-Controlled Key | Base | Allowed | sparse | 0.047 |\n| 6 | 90 | Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') | Base | Allowed | dense | 0.456 |\n| 7 | 613 | Insufficient Session Expiration | Base | Allowed | graph | 0.002 |\n| 8 | 285 | Improper Authorization | Class | Discouraged | sparse | 0.047 |\n| 9 | 201 | Insertion of Sensitive Information Into Sent Data | Base | Allowed | sparse | 0.047 |\n| 10 | 306 | Missing Authentication for Critical Function | Base | Allowed | sparse | 0.045 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-305: Authentication Bypass by Primary Weakness\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Most \"authentication bypass\" errors are resultant, not primary.\n\n\n\n### Observed Examples\n- **CVE-2002-1374:** The provided password is only compared against the first character of the real password.\n- **CVE-2000-0979:** The password is not properly checked, which allows remote attackers to bypass access controls by sending a 1-byte password that matches the first character of the real password.\n- **CVE-2001-0088:** Chain: Forum software does not properly initialize an array, which inadvertently sets the password to a single character, allowing remote attackers to easily guess the password and gain administrative privileges.\n\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n### Extended Description\n\n\nAttackers may be able to bypass weak authentication faster and/or with less effort than expected.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2021-3116:** Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)\n\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** \n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n\n### Observed Examples\n- **CVE-2021-39155:** Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.\n- **CVE-2019-15900:** Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).\n- **CVE-2009-2213:** Gateway uses default \"Allow\" configuration for its authorization settings.\n\n\n\n\n## CWE-287: Improper Authentication\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nWhen an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nauthentification: An alternate term is \"authentification\", which appears to be most commonly used by people from non-English-speaking countries.\nAuthN: \"AuthN\" is typically used as an abbreviation of \"authentication\" within the web application security community. It is also distinct from \"AuthZ,\" which is an abbreviation of \"authorization.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\nAuthC: \"AuthC\" is used as an abbreviation of \"authentication,\" but it appears to used less frequently than \"AuthN.\"\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-1390: Weak Authentication\n- CWE-306: Missing Authentication for Critical Function\n\n\n### Additional Notes\n**[Relationship]** This can be resultant from SQL injection vulnerabilities and other issues.\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2022-36436:** Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type.\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n### Extended Description\n\n\nRetrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user-related record stored in the system and would be used to lookup that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks present in the system.\n\n\nFor example, attackers can look at places where user specific data is retrieved (e.g. search screens) and determine whether the key for the item being looked up is controllable externally. The key may be a hidden field in the HTML form field, might be passed as a URL parameter or as an unencrypted cookie variable, then in each of these cases it will be possible to tamper with the key value.\n\n\nOne manifestation of this weakness is when a system uses sequential or otherwise easily-guessable session IDs that would allow one user to easily switch to another user's session and read/modify their data.\n\n\n### Alternative Terms\nInsecure Direct Object Reference / IDOR: The \"Insecure Direct Object Reference\" term, as described in the OWASP Top Ten, is broader than this CWE because it also covers path traversal (CWE-22). Within the context of vulnerability theory, there is a similarity between the OWASP concept and CWE-706: Use of Incorrectly-Resolved Name or Reference.\nBroken Object Level Authorization / BOLA: BOLA is used in the 2019 OWASP API Security Top 10 and is said to be the same as IDOR.\nHorizontal Authorization: \"Horizontal Authorization\" is used to describe situations in which two users have the same privilege level, but must be prevented from accessing each other's resources. This is fairly common when using key-based access to resources in a multi-user context.\n\n### Relationships\nChildOf -> CWE-863\nChildOf -> CWE-863\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-36539:** An educational application does not appropriately restrict file IDs to a particular user. The attacker can brute-force guess IDs, indicating IDOR.\n\n\n\n\n## CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-943\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Factors: resultant to special character mismanagement, MAID, or denylist/allowlist problems. Can be primary to authentication and verification errors.\n\n\n\n### Observed Examples\n- **CVE-2021-41232:** Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)\n- **CVE-2005-2301:** Server does not properly escape LDAP queries, which allows remote attackers to cause a DoS and possibly conduct an LDAP injection attack.\n\n\n\n\n## CWE-613: Insufficient Session Expiration\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nAccording to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-672\nChildOf -> CWE-672\nCanPrecede -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Other]** The lack of proper session expiration may improve the likely success of certain attacks. For example, an attacker may intercept a session ID, possibly via a network sniffer or Cross-site Scripting attack. Although short session expiration times do not help if a stolen token is immediately used, they will protect against ongoing replaying of the session ID. In another scenario, a user might access a web site from a shared computer (such as at a library, Internet cafe, or open work environment). Insufficient Session Expiration could allow an attacker to use the browser's back button to access web pages previously accessed by the victim.\n\n\n\n\n\n\n## CWE-285: Improper Authorization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\n\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied consistently - or not at all - users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.\n**Reasons:**\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-2960:** Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.\n\n\n\n\n## CWE-201: Insertion of Sensitive Information Into Sent Data\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-200\nCanAlsoBe -> CWE-209\nCanAlsoBe -> CWE-202\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Other]** Sensitive information could include data that is sensitive in and of itself (such as credentials or private messages), or otherwise useful in the further exploitation of the system (such as internal file system structure).\n\n\n\n### Observed Examples\n- **CVE-2022-0708:** Collaboration platform does not clear team emails in a response, allowing leak of email addresses\n\n\n\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-31260:** Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)\n- **CVE-2022-29951:** TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.\n- **CVE-2022-29952:** Condition Monitor firmware uses a protocol that does not require authentication.\n\n",
  "keyphrases": {},
  "timestamp": "2025-04-02 01:11:19",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 5659.591934262678,
      "search_source": "base_query"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 5433.65295917063,
      "search_source": "base_query"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "score": 5350.234940148475,
      "search_source": "base_query"
    },
    {
      "cwe_id": "285",
      "name": "Improper Authorization",
      "score": 5299.661483918275,
      "search_source": "base_query"
    },
    {
      "cwe_id": "287",
      "name": "Improper Authentication",
      "score": 5204.141673293054,
      "search_source": "base_query"
    }
  ]
}